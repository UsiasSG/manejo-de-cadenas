/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.util.Map;
import java.util.HashMap;
import modelo.Cadena_txt;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Clipboard;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import javax.swing.text.Document;
import javax.swing.text.BadLocationException;

import java.util.ArrayList;
import java.util.List;


/**
 *
 * @author robin
 */
public class frm_vista extends javax.swing.JFrame {

    /**
     * Creates new form frm_edit
     */
    public frm_vista() {
        super("PROGRAMACION II");
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_titulo = new javax.swing.JLabel();
        lbl_mensaje = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_ingresartexto = new javax.swing.JTextPane();
        btn_procesar = new javax.swing.JButton();
        lbl_1 = new javax.swing.JLabel();
        lbl_2 = new javax.swing.JLabel();
        lbl_3 = new javax.swing.JLabel();
        lbl_4 = new javax.swing.JLabel();
        lbl_5 = new javax.swing.JLabel();
        lbl_6 = new javax.swing.JLabel();
        lbl_7 = new javax.swing.JLabel();
        lbl_9 = new javax.swing.JLabel();
        lbl_10 = new javax.swing.JLabel();
        lbl_11 = new javax.swing.JLabel();
        lbl_12 = new javax.swing.JLabel();
        lbl_13 = new javax.swing.JLabel();
        lbl_14 = new javax.swing.JLabel();
        lbl_15 = new javax.swing.JLabel();
        txt_4 = new javax.swing.JTextField();
        txt_7 = new javax.swing.JTextField();
        txt_2 = new javax.swing.JTextField();
        txt_3 = new javax.swing.JTextField();
        txt_5 = new javax.swing.JTextField();
        txt_6 = new javax.swing.JTextField();
        txt_1 = new javax.swing.JTextField();
        txt_9 = new javax.swing.JTextField();
        txt_11 = new javax.swing.JTextField();
        txt_10 = new javax.swing.JTextField();
        txt_12 = new javax.swing.JTextField();
        txt_13 = new javax.swing.JTextField();
        txt_15 = new javax.swing.JTextField();
        txt_14 = new javax.swing.JTextField();
        lbl_8 = new javax.swing.JLabel();
        txt_8 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_traduccion = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        MENU_OPCIONES = new javax.swing.JMenuBar();
        guardar_submenu = new javax.swing.JMenu();
        submenu_abrir = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        guardarcomo_submenu = new javax.swing.JMenuItem();
        editar_menu = new javax.swing.JMenu();
        copiar_submenu = new javax.swing.JMenuItem();
        cortar_submenu = new javax.swing.JMenuItem();
        pegar_submenu = new javax.swing.JMenuItem();
        buscar_submenu = new javax.swing.JMenuItem();
        reemplazar_submenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(723, 954));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 2));

        lbl_titulo.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        lbl_titulo.setText("MANEJO DE CADENAS");
        lbl_titulo.setPreferredSize(new java.awt.Dimension(120, 20));

        lbl_mensaje.setText("Ingrese un texto o abra un archivo");

        txt_ingresartexto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        txt_ingresartexto.setForeground(new java.awt.Color(102, 204, 255));
        jScrollPane1.setViewportView(txt_ingresartexto);

        btn_procesar.setText("Procesar");
        btn_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_procesarActionPerformed(evt);
            }
        });

        lbl_1.setText("Longitud de Texto.........:");

        lbl_2.setText("Total de Palabras..........:");

        lbl_3.setText("Primer letra del texto....:");

        lbl_4.setText("Ultima letra del texto...:");

        lbl_5.setText("Letra central del texto..:");

        lbl_6.setText("Primera palabra............:");

        lbl_7.setText("Palabra central.............:");

        lbl_9.setText("Repeticiones de \"A\",  \"á\", \"a\".");

        lbl_10.setText("Repeticiones de \"E\", \"e\", \"é\".");

        lbl_11.setText("Repeticiondes de \"I\", \"i\", \"í\".");

        lbl_12.setText("Repeticiones de \"O\", \"o\", \"ó\".");

        lbl_13.setText("Repeticiones de \"U\", \"u\", \"ú\".");

        lbl_14.setText("Palabras con cantidad de caracteres par.");

        lbl_15.setText("Palabras con cantidad de caracteres impar.");

        txt_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_4ActionPerformed(evt);
            }
        });

        txt_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_7ActionPerformed(evt);
            }
        });

        txt_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_2ActionPerformed(evt);
            }
        });

        txt_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_3ActionPerformed(evt);
            }
        });

        txt_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_5ActionPerformed(evt);
            }
        });

        txt_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_6ActionPerformed(evt);
            }
        });

        txt_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_9ActionPerformed(evt);
            }
        });

        txt_11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_11ActionPerformed(evt);
            }
        });

        txt_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_10ActionPerformed(evt);
            }
        });

        txt_12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_12ActionPerformed(evt);
            }
        });

        txt_13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_13ActionPerformed(evt);
            }
        });

        txt_15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_15ActionPerformed(evt);
            }
        });

        txt_14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_14ActionPerformed(evt);
            }
        });

        lbl_8.setText("Ultima palabra.............:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(btn_procesar)
                .addGap(0, 368, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_1)
                            .addComponent(lbl_2)
                            .addComponent(lbl_5)
                            .addComponent(lbl_6)
                            .addComponent(lbl_7)
                            .addComponent(lbl_8)
                            .addComponent(lbl_4)
                            .addComponent(lbl_3))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txt_6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txt_7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txt_4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txt_3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txt_1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_13)
                                    .addComponent(lbl_14)
                                    .addComponent(lbl_11)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbl_12)
                                        .addComponent(lbl_9)
                                        .addComponent(lbl_10, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lbl_15)))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(83, 83, 83))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_15, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_mensaje)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(lbl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbl_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(lbl_mensaje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btn_procesar)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_14)
                            .addComponent(txt_14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_15)
                            .addComponent(txt_15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_8)
                    .addComponent(txt_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        txt_traduccion.setBackground(new java.awt.Color(255, 204, 255));
        txt_traduccion.setColumns(20);
        txt_traduccion.setForeground(new java.awt.Color(51, 51, 51));
        txt_traduccion.setRows(5);
        txt_traduccion.setName(""); // NOI18N
        jScrollPane2.setViewportView(txt_traduccion);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel1.setText("TRADUCCION A CLAVE MURCIELAGO");

        MENU_OPCIONES.setForeground(new java.awt.Color(255, 0, 51));

        guardar_submenu.setText("Archivo");

        submenu_abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        submenu_abrir.setText("ABRIR");
        submenu_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submenu_abrirActionPerformed(evt);
            }
        });
        guardar_submenu.add(submenu_abrir);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("GUARDAR");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        guardar_submenu.add(jMenuItem2);

        guardarcomo_submenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        guardarcomo_submenu.setText("GUARDAR COMO");
        guardarcomo_submenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarcomo_submenuActionPerformed(evt);
            }
        });
        guardar_submenu.add(guardarcomo_submenu);

        MENU_OPCIONES.add(guardar_submenu);

        editar_menu.setText("Editar");

        copiar_submenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copiar_submenu.setText("COPIAR");
        copiar_submenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiar_submenuActionPerformed(evt);
            }
        });
        editar_menu.add(copiar_submenu);

        cortar_submenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cortar_submenu.setText("CORTAR");
        cortar_submenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortar_submenuActionPerformed(evt);
            }
        });
        editar_menu.add(cortar_submenu);

        pegar_submenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        pegar_submenu.setText("PEGAR");
        pegar_submenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pegar_submenuActionPerformed(evt);
            }
        });
        editar_menu.add(pegar_submenu);

        buscar_submenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        buscar_submenu.setText("BUSCAR");
        buscar_submenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_submenuActionPerformed(evt);
            }
        });
        editar_menu.add(buscar_submenu);

        reemplazar_submenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        reemplazar_submenu.setText("REEMPLAZAR");
        reemplazar_submenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reemplazar_submenuActionPerformed(evt);
            }
        });
        editar_menu.add(reemplazar_submenu);

        MENU_OPCIONES.add(editar_menu);

        setJMenuBar(MENU_OPCIONES);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 14, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submenu_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submenu_abrirActionPerformed
            // Crear un JFileChooser para seleccionar el archivo a abrir, apuntando a la carpeta deseada
        JFileChooser fileChooser = new JFileChooser("C:\\Users\\robin\\OneDrive\\Desktop\\editor_texto1");
        fileChooser.setDialogTitle("Abrir archivo");

        // Mostrar el cuadro de diálogo de "Abrir" y verificar si el usuario seleccionó un archivo
        int userSelection = fileChooser.showOpenDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            // Obtener el archivo seleccionado
            File archivoSeleccionado = fileChooser.getSelectedFile();

            // Leer el contenido del archivo y mostrarlo en txt_ingresartexto
            try (BufferedReader br = new BufferedReader(new FileReader(archivoSeleccionado))) {
                StringBuilder contenido = new StringBuilder();
                String linea;
                while ((linea = br.readLine()) != null) {
                    contenido.append(linea).append("\n");
                }
                // Mostrar el contenido en txt_ingresartexto
                txt_ingresartexto.setText(contenido.toString());

                // Notificar al usuario que el archivo se abrió correctamente
                JOptionPane.showMessageDialog(this, "Archivo abierto con éxito: " + archivoSeleccionado.getName());

            } catch (IOException e) {
                // Si ocurre un error durante la lectura del archivo, notificar al usuario
                JOptionPane.showMessageDialog(this, "Error al abrir el archivo: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_submenu_abrirActionPerformed

    private void copiar_submenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiar_submenuActionPerformed
        // Obtener el texto seleccionado en el JTextArea txt_ingresartexto
    String textoSeleccionado = txt_ingresartexto.getSelectedText();
    
    // Verificar si hay algún texto seleccionado
    if (textoSeleccionado != null && !textoSeleccionado.isEmpty()) {
        // Crear un objeto StringSelection con el texto seleccionado
        StringSelection stringSelection = new StringSelection(textoSeleccionado);
        
        // Obtener el portapapeles del sistema
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        
        // Copiar el texto al portapapeles
        clipboard.setContents(stringSelection, null);
    }
    }//GEN-LAST:event_copiar_submenuActionPerformed

    private void cortar_submenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortar_submenuActionPerformed
            // Obtener el texto seleccionado en txt_ingresartexto
        String textoSeleccionado = txt_ingresartexto.getSelectedText();

        // Verificar si hay algún texto seleccionado
        if (textoSeleccionado != null && !textoSeleccionado.isEmpty()) {
            // Copiar el texto seleccionado al portapapeles
            StringSelection stringSelection = new StringSelection(textoSeleccionado);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);

            // Eliminar el texto seleccionado del JTextArea
            txt_ingresartexto.replaceSelection("");
        }
    }//GEN-LAST:event_cortar_submenuActionPerformed

    private void btn_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procesarActionPerformed
         String textoIngresado = txt_ingresartexto.getText();

    // Verificar si el texto no está vacío
    if (!textoIngresado.isEmpty()) {
        // Calcular la longitud total del texto
        int longitudTexto = textoIngresado.length();

        // Dividir el texto en palabras y contar el número de palabras
        String[] palabras = textoIngresado.trim().split("\\s+");  // Separa por espacios
        int numeroPalabras = palabras.length;

        // Obtener la primera y última letra del texto, y la letra central
        String primeraLetra = textoIngresado.substring(0, 1);
        String ultimaLetra = textoIngresado.substring(longitudTexto - 1);
        String letraCentral = textoIngresado.substring(longitudTexto / 2, (longitudTexto / 2) + 1);

        // Obtener la primera, central y última palabra
        String primeraPalabra = palabras[0];
        String palabraCentral = palabras[numeroPalabras / 2];
        String ultimaPalabra = palabras[numeroPalabras - 1];

        // Contar las repeticiones de cada vocal
        int repeticionesA = textoIngresado.length() - textoIngresado.replaceAll("(?i)a", "").length();
        int repeticionesE = textoIngresado.length() - textoIngresado.replaceAll("(?i)e", "").length();
        int repeticionesI = textoIngresado.length() - textoIngresado.replaceAll("(?i)i", "").length();
        int repeticionesO = textoIngresado.length() - textoIngresado.replaceAll("(?i)o", "").length();
        int repeticionesU = textoIngresado.length() - textoIngresado.replaceAll("(?i)u", "").length();

        // Contar palabras con cantidad de caracteres par e impar
        int palabrasPar = 0;
        int palabrasImpar = 0;
        for (String palabra : palabras) {
            if (palabra.length() % 2 == 0) {
                palabrasPar++;
            } else {
                palabrasImpar++;
            }
        }

        // Mostrar los resultados en los JTextField correspondientes
        txt_1.setText(String.valueOf(longitudTexto));
        txt_2.setText(String.valueOf(numeroPalabras));
        txt_3.setText(primeraLetra);
        txt_4.setText(ultimaLetra);
        txt_5.setText(letraCentral);
        txt_6.setText(primeraPalabra);
        txt_7.setText(palabraCentral);
        txt_8.setText(ultimaPalabra);
        txt_9.setText(String.valueOf(repeticionesA));
        txt_10.setText(String.valueOf(repeticionesE));
        txt_11.setText(String.valueOf(repeticionesI));
        txt_12.setText(String.valueOf(repeticionesO));
        txt_13.setText(String.valueOf(repeticionesU));
        txt_14.setText(String.valueOf(palabrasPar));
        txt_15.setText(String.valueOf(palabrasImpar));

        // Mapa de caracteres para el código murciélago
        Map<Character, Character> codigoMurcielago = new HashMap<>();
        codigoMurcielago.put('m', '0');
        codigoMurcielago.put('u', '1');
        codigoMurcielago.put('r', '2');
        codigoMurcielago.put('c', '3');
        codigoMurcielago.put('i', '4');
        codigoMurcielago.put('e', '5');
        codigoMurcielago.put('l', '6');
        codigoMurcielago.put('a', '7');
        codigoMurcielago.put('g', '8');
        codigoMurcielago.put('o', '9');
        codigoMurcielago.put('M', '0');
        codigoMurcielago.put('U', '1');
        codigoMurcielago.put('R', '2');
        codigoMurcielago.put('C', '3');
        codigoMurcielago.put('I', '4');
        codigoMurcielago.put('E', '5');
        codigoMurcielago.put('L', '6');
        codigoMurcielago.put('A', '7');
        codigoMurcielago.put('G', '8');
        codigoMurcielago.put('O', '9');

        // Convertir el texto usando el código murciélago
        StringBuilder textoTraducido = new StringBuilder();
        for (char c : textoIngresado.toCharArray()) {
            textoTraducido.append(codigoMurcielago.getOrDefault(c, c));
        }

        // Mostrar el texto traducido en txt_codigo_murcielago
        txt_traduccion.setText(textoTraducido.toString());

    } else {
        // Si el campo de texto está vacío, mostrar "No" en todos los campos
        txt_1.setText("No");
        txt_2.setText("No");
        txt_3.setText("No");
        txt_4.setText("No");
        txt_5.setText("No");
        txt_6.setText("No");
        txt_7.setText("No");
        txt_8.setText("No");
        txt_9.setText("No");
        txt_10.setText("No");
        txt_11.setText("No");
        txt_12.setText("No");
        txt_13.setText("No");
        txt_14.setText("No");
        txt_15.setText("No");
        txt_traduccion.setText("No");
    }  
    }//GEN-LAST:event_btn_procesarActionPerformed

    private void txt_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_4ActionPerformed

    private void txt_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_7ActionPerformed

    private void txt_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_2ActionPerformed

    private void txt_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_3ActionPerformed

    private void txt_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_5ActionPerformed

    private void txt_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_6ActionPerformed

    private void txt_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_9ActionPerformed

    private void txt_11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_11ActionPerformed

    private void txt_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_10ActionPerformed

    private void txt_12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_12ActionPerformed

    private void txt_13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_13ActionPerformed

    private void txt_15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_15ActionPerformed

    private void txt_14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_14ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Capturar el texto ingresado en el JTextField o JTextArea
        String textoIngresado = txt_ingresartexto.getText();

        // Verificar si el texto no está vacío antes de intentar guardarlo
        if (!textoIngresado.isEmpty()) {
            // Instanciar el objeto de la clase que maneja la creación y guardado del archivo
            modelo.Cadena_txt archivo = new Cadena_txt();

            // Guardar el texto en el archivo
            archivo.guardarArchivo(textoIngresado);

            // Opcional: Notificar al usuario que el archivo se guardó correctamente
            JOptionPane.showMessageDialog(null, "Texto guardado en el archivo con éxito.");
        } else {
            // Si el campo está vacío, notificar al usuario
            JOptionPane.showMessageDialog(null, "El campo de texto está vacío. Por favor, ingrese algún texto.");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void guardarcomo_submenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarcomo_submenuActionPerformed
        // Capturar el texto ingresado en el JTextField o JTextArea
    String textoIngresado = txt_ingresartexto.getText();

    // Verificar si el texto no está vacío antes de intentar guardarlo
    if (!textoIngresado.isEmpty()) {
        // Crear un JFileChooser y establecer la carpeta predeterminada
        JFileChooser fileChooser = new JFileChooser(new File("C:\\Users\\robin\\OneDrive\\Desktop\\editor_texto1"));
        fileChooser.setDialogTitle("Guardar como");

        // Mostrar el cuadro de diálogo de "Guardar como" y verificar si el usuario seleccionó una ubicación
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            // Obtener el archivo seleccionado
            File archivoSeleccionado = fileChooser.getSelectedFile();

            // Si el archivo seleccionado ya tiene una extensión, usarlo tal cual,
            // de lo contrario, añadir ".txt" como extensión predeterminada
            if (!archivoSeleccionado.getName().endsWith(".txt")) {
                archivoSeleccionado = new File(archivoSeleccionado.getAbsolutePath() + ".txt");
            }

            // Instanciar el objeto de la clase que maneja la creación y guardado del archivo
            modelo.Cadena_txt archivo = new modelo.Cadena_txt();

            // Guardar el texto en el archivo seleccionado
            archivo.guardarComo(archivoSeleccionado.getAbsolutePath(), textoIngresado);

            // Notificar al usuario que el archivo se guardó correctamente
            JOptionPane.showMessageDialog(null, "Texto guardado en el archivo: " + archivoSeleccionado.getName());
        }
    } else {
        // Si el campo está vacío, notificar al usuario
        JOptionPane.showMessageDialog(null, "El campo de texto está vacío. Por favor, ingrese algún texto.");
    }
    }//GEN-LAST:event_guardarcomo_submenuActionPerformed

    private void pegar_submenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pegar_submenuActionPerformed
            // Obtener el contenido del portapapeles
       Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
       try {
           // Verificar si el contenido del portapapeles es de tipo texto
           if (clipboard.isDataFlavorAvailable(DataFlavor.stringFlavor)) {
               // Obtener el texto del portapapeles
               String textoPortapapeles = (String) clipboard.getData(DataFlavor.stringFlavor);

               // Insertar el texto en la posición actual del cursor en txt_ingresartexto
               int pos = txt_ingresartexto.getCaretPosition();
               txt_ingresartexto.getDocument().insertString(pos, textoPortapapeles, null);
           }
       } catch (UnsupportedFlavorException | IOException | BadLocationException ex) {
           ex.printStackTrace();  // Manejo de errores
       }
    }//GEN-LAST:event_pegar_submenuActionPerformed

    private void buscar_submenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_submenuActionPerformed
    // Crear un cuadro de diálogo para que el usuario ingrese la palabra a buscar
    String palabraBuscar = JOptionPane.showInputDialog(this, "Ingrese la palabra a buscar:", "Buscar", JOptionPane.PLAIN_MESSAGE);

    if (palabraBuscar != null && !palabraBuscar.trim().isEmpty()) {
        // Obtener el texto del JTextPane
        String texto = txt_ingresartexto.getText();
        
        // Iniciar la búsqueda de la palabra en el texto
        int index = 0;
        boolean encontrado = false;

        // Limpiar la selección anterior
        txt_ingresartexto.getHighlighter().removeAllHighlights();
        
        // Guardar las posiciones de selección
        List<int[]> posiciones = new ArrayList<>();

        while ((index = texto.indexOf(palabraBuscar, index)) != -1) {
            // Ajustar el índice de inicio para asegurar que sea el inicio de una palabra
            int start = index;
            if (start > 0 && Character.isLetterOrDigit(texto.charAt(start - 1))) {
                start = texto.lastIndexOf(' ', start - 1) + 1; // Retroceder hasta el inicio de la palabra
            }

            // Ajustar el índice final para asegurar que sea el final de una palabra
            int end = index + palabraBuscar.length();
            if (end < texto.length() && Character.isLetterOrDigit(texto.charAt(end))) {
                end = texto.indexOf(' ', end); // Avanzar hasta el próximo espacio
                if (end == -1) {
                    end = texto.length(); // Si no hay más espacios, usar el final del texto
                }
            }

            // Verificar que el texto seleccionado coincida con la palabra
            String textoSeleccionado = texto.substring(start, end);
            if (textoSeleccionado.trim().equals(palabraBuscar)) {
                // Guardar las posiciones para selección
                posiciones.add(new int[]{start, end});
                encontrado = true;
            }

            // Avanzar el índice para buscar la siguiente ocurrencia
            index = end;
        }

        if (encontrado) {
            // Seleccionar todas las ocurrencias
            for (int[] pos : posiciones) {
                txt_ingresartexto.select(pos[0], pos[1]);
                // Asegurarse de que el JTextPane esté visible en el área de desplazamiento
                txt_ingresartexto.requestFocus();
            }
            
            // Informar al usuario
            JOptionPane.showMessageDialog(this, "Todas las ocurrencias de la palabra '" + palabraBuscar + "' han sido seleccionadas en el texto.", "Resultado de la búsqueda", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // La palabra no fue encontrada
            JOptionPane.showMessageDialog(this, "La palabra '" + palabraBuscar + "' no se encontró en el texto.", "Resultado de la búsqueda", JOptionPane.INFORMATION_MESSAGE);
        }
    } else {
        // El usuario no ingresó ninguna palabra
        JOptionPane.showMessageDialog(this, "Debe ingresar una palabra para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_buscar_submenuActionPerformed

    private void reemplazar_submenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reemplazar_submenuActionPerformed
       try {
        // Obtener el documento del JTextPane
        Document doc = txt_ingresartexto.getDocument();
        
        // Obtener el texto seleccionado en el JTextPane
        int start = txt_ingresartexto.getSelectionStart();
        int end = txt_ingresartexto.getSelectionEnd();
        String textoSeleccionado = doc.getText(start, end - start);
        
        if (textoSeleccionado != null && !textoSeleccionado.isEmpty()) {
            // Crear un cuadro de diálogo para que el usuario ingrese el nuevo texto
            String nuevoTexto = JOptionPane.showInputDialog(null, "Ingrese el nuevo texto para reemplazar:", "Reemplazar Texto", JOptionPane.PLAIN_MESSAGE);
            
            if (nuevoTexto != null) {
                // Reemplazar el texto seleccionado con el nuevo texto
                doc.remove(start, end - start); // Elimina el texto seleccionado
                doc.insertString(start, nuevoTexto, null); // Inserta el nuevo texto
            }
        } else {
            // No hay texto seleccionado
            JOptionPane.showMessageDialog(null, "Debe seleccionar el texto que desea reemplazar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    } catch (BadLocationException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_reemplazar_submenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MENU_OPCIONES;
    private javax.swing.JButton btn_procesar;
    private javax.swing.JMenuItem buscar_submenu;
    private javax.swing.JMenuItem copiar_submenu;
    private javax.swing.JMenuItem cortar_submenu;
    private javax.swing.JMenu editar_menu;
    private javax.swing.JMenu guardar_submenu;
    private javax.swing.JMenuItem guardarcomo_submenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_1;
    private javax.swing.JLabel lbl_10;
    private javax.swing.JLabel lbl_11;
    private javax.swing.JLabel lbl_12;
    private javax.swing.JLabel lbl_13;
    private javax.swing.JLabel lbl_14;
    private javax.swing.JLabel lbl_15;
    private javax.swing.JLabel lbl_2;
    private javax.swing.JLabel lbl_3;
    private javax.swing.JLabel lbl_4;
    private javax.swing.JLabel lbl_5;
    private javax.swing.JLabel lbl_6;
    private javax.swing.JLabel lbl_7;
    private javax.swing.JLabel lbl_8;
    private javax.swing.JLabel lbl_9;
    private javax.swing.JLabel lbl_mensaje;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JMenuItem pegar_submenu;
    private javax.swing.JMenuItem reemplazar_submenu;
    private javax.swing.JMenuItem submenu_abrir;
    private javax.swing.JTextField txt_1;
    private javax.swing.JTextField txt_10;
    private javax.swing.JTextField txt_11;
    private javax.swing.JTextField txt_12;
    private javax.swing.JTextField txt_13;
    private javax.swing.JTextField txt_14;
    private javax.swing.JTextField txt_15;
    private javax.swing.JTextField txt_2;
    private javax.swing.JTextField txt_3;
    private javax.swing.JTextField txt_4;
    private javax.swing.JTextField txt_5;
    private javax.swing.JTextField txt_6;
    private javax.swing.JTextField txt_7;
    private javax.swing.JTextField txt_8;
    private javax.swing.JTextField txt_9;
    private javax.swing.JTextPane txt_ingresartexto;
    private javax.swing.JTextArea txt_traduccion;
    // End of variables declaration//GEN-END:variables
}
